<#@ template language="C#v3.5" hostspecific="True" debug="True" #>
<#@ output extension="g.cs" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="FormulaTemplateProperty.tt" #>
<#@ include file="FormulaTemplate.tt" #>
<#
	var ft = new FormulaTemplate();
	ft.BaseTypeName = "Formula";
	ft.TypeName = "BlockFormula";
	ft.NodeType = FormulaType.Block;
	ft.Properties.Add(new FormulaTemplateProperty() { Name = "ParentBlock", TypeName = "BlockFormula", Default = "new NullBlockFormula()", PrevPropertyName = "TypeDeclaration" });
	ft.Properties.Add(new FormulaTemplateProperty() { Name = "ChildBlocks", TypeName = "FormulaCollection<BlockFormula>", Default = "new FormulaCollection<BlockFormula>()", PrevPropertyName = "ParentBlock" });
	ft.Properties.Add(new FormulaTemplateProperty() { Name = "Variables", TypeName = "FormulaCollection<Formula>", Default = "new FormulaCollection<Formula>()", PrevPropertyName = "ChildBlocks" });
	ft.Properties.Add(new FormulaTemplateProperty() { Name = "Formulas", TypeName = "FormulaCollection<Formula>", Default = "new FormulaCollection<Formula>()", PrevPropertyName = "Variables" });
	ft.Properties.Add(new FormulaTemplateProperty() { Name = "Result", TypeName = "Formula", Default = "new NullFormula()", PrevPropertyName = "Formulas" });
	ft.Render();
#>
